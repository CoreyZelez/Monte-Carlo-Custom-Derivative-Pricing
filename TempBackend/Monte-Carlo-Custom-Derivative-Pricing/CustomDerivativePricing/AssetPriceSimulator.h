#pragma once
#include "AssetModel.h"
#include <vector>

class AssetPriceSimulator
{
public:
	AssetPriceSimulator(AssetModel model);

	/// @brief Simulates possible paths for the asset price based on the asset price model. Utilizes multiple threads.
	/// @param numThreads The number of threads used to simulate prices.
	/// @param numSimulations The number of price simulations per thread.
	/// @param numDays The number of days prices are simulated for.
	void runSimulations(int numThreads, int numSimulations, int numDays);

	const std::vector<std::vector<double>>& getPrices() const;

private:
	const AssetModel model;  // The initial model of each simulation.
	std::vector<std::vector<double>> prices;  // Prices generated by simulations.

	/// @brief Simulates possible paths for the asset price based on the asset price model.
	/// @param numSimulations The number of price simulations per thread.
	void simulatePrices(int threadNum, int numSimulations, int numDays);
};

